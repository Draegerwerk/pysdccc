[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pysdccc"
dynamic = ["version"]
authors = [
    { name = "Leon Budnick", email = "leon.budnick@draeger.com" },
]
description = "Python wrapper for sdccc test tool"
requires-python = ">=3.11, <3.14"
dependencies = [
    "junitparser>=3.1.2",
    "httpx>=0.28.0",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["sdc", "sdccc", "test", "wrapper"]

[project.urls]
"Homepage" = "https://github.com/Draegerwerk/pysdccc"
"Bug Tracker" = "https://github.com/Draegerwerk/pysdccc/issues"
"Changelog" = "https://github.com/Draegerwerk/pysdccc/blob/main/CHANGELOG.md"
"Repository" = "https://github.com/Draegerwerk/pysdccc.git"

[dependency-groups]
test = [
    "pytest>=8",
    "pytest-html>=4",
    "pytest-asyncio>=0.24",
]
dev = [
    { include-group = "test" },
    "ruff>=0.9.6",
    "pyright>=1.1.390",
    "lxml-stubs>=0.5.1",
    "types-toml>=0.10.8",
]

[project.scripts]
pysdccc = "pysdccc._cli:cli"
sdccc = "pysdccc._cli:sdccc"

[project.optional-dependencies]
cli = [
    "click>=8.0",
]

[tool.hatch.build.targets.wheel]  # https://github.com/astral-sh/uv/issues/11557#issuecomment-2661521666
packages = ["src/pysdccc"]

[tool.hatch.build.targets.sdist]  # https://github.com/astral-sh/uv/issues/11557#issuecomment-2661521666
only-include = ["src"]

[tool.hatch.version]
path = "src/pysdccc/__init__.py"

[tool.ruff]
lint.select = ["ALL"]  # https://docs.astral.sh/ruff/settings/#select
lint.extend-ignore = [# https://docs.astral.sh/ruff/settings/#extend-ignore
    "ANN204", # https://docs.astral.sh/ruff/rules/missing-return-type-special-method/
    "ANN401", # https://docs.astral.sh/ruff/rules/any-type/
    "C408", # https://docs.astral.sh/ruff/rules/unnecessary-collection-call/
    "C409", # https://docs.astral.sh/ruff/rules/unnecessary-literal-within-tuple-call/
    "D105", # undocumented-magic-method
    "D107", # undocumented-public-init
    "D203", # one-blank-line-before-class
    "D213", # multi-line-summary-second-line
    "EM101", # https://docs.astral.sh/ruff/rules/raw-string-in-exception/
    "EM102", # https://docs.astral.sh/ruff/rules/f-string-in-exception/
    "S101", # https://docs.astral.sh/ruff/rules/assert/
    "S311", # https://docs.astral.sh/ruff/rules/suspicious-non-cryptographic-random-usage/
    "SIM102", # collapsible-if
    "T201", # https://docs.astral.sh/ruff/rules/print/
    "TRY003", #https://docs.astral.sh/ruff/rules/raise-vanilla-args/
]

line-length = 120  # https://docs.astral.sh/ruff/settings/#line-length
# Allow imports relative to the "src" and "test" directories.
src = ["src", "tests"]  # https://docs.astral.sh/ruff/settings/#src

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true # https://docs.astral.sh/ruff/settings/#allow-star-arg-any
suppress-none-returning = true # https://docs.astral.sh/ruff/settings/#suppress-none-returning

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true  # https://docs.astral.sh/ruff/settings/#allow-dict-calls-with-keyword-arguments

[tool.ruff.lint.pycodestyle]
max-doc-length = 120 # https://docs.astral.sh/ruff/settings/#max-doc-length

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests"
]

log_cli = true
log_cli_level = "info"
log_cli_format = "%(asctime)s %(levelname)s (%(threadName)-10s) %(filename)s:%(lineno)d %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

log_file = "pytest.log"
log_file_level = "debug"
log_file_format = "%(asctime)s %(levelname)s (%(threadName)-10s) %(filename)s:%(lineno)d %(message)s"
log_file_date_format = "%Y-%m-%d %H:%M:%S:%f"

filterwarnings = [# https://docs.python.org/3/library/warnings.html#warning-filter
    "ignore::pytest.PytestUnhandledThreadExceptionWarning", # may be raised in logging thread if pipe is already closed
]
